"use client";

import { useEffect, useRef, useState } from "react";
import styles from "./howSectionTabs.module.css";

export default function HowSectionTabs() {
  const [activeTab, setActiveTab] = useState(-1);
  const howSectionTabListRef = useRef();
  const [isStarted, setIsStarted] = useState(false);
  const howSectionTab = useRef([]);
  const howSectionTabLine = useRef();
  const intervalRef = useRef();

  const howSectionTabList = [
    {
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
        >
          <path
            d="M19.6577 13.2C19.4377 13.2 19.2077 13.13 18.9877 13.08C18.5426 12.9805 18.1048 12.8502 17.6777 12.69C17.2138 12.5212 16.7039 12.53 16.246 12.7146C15.7882 12.8992 15.4148 13.2466 15.1977 13.69L14.9777 14.15C14.0066 13.5992 13.1094 12.9272 12.3077 12.15C11.5306 11.3484 10.8585 10.4512 10.3077 9.48001L10.7677 9.27001C11.2111 9.05293 11.5585 8.67954 11.7431 8.2217C11.9277 7.76386 11.9365 7.25392 11.7677 6.79001C11.6089 6.35904 11.4786 5.91809 11.3777 5.47001C11.3277 5.25001 11.2877 5.02001 11.2577 4.80001C11.1363 4.09563 10.7674 3.45775 10.2174 3.00125C9.66735 2.54475 8.97243 2.29962 8.25773 2.31001H5.24773C4.82498 2.30946 4.40688 2.39826 4.02085 2.5706C3.63482 2.74293 3.28957 2.99491 3.00773 3.31001C2.72005 3.63367 2.50585 4.01576 2.37983 4.43005C2.25382 4.84433 2.21899 5.28099 2.27773 5.71001C2.82132 9.87215 4.72294 13.7387 7.68773 16.71C10.6591 19.6748 14.5256 21.5764 18.6877 22.12C18.8175 22.1299 18.9479 22.1299 19.0777 22.12C19.8151 22.1211 20.5271 21.8505 21.0777 21.36C21.3928 21.0782 21.6448 20.7329 21.8171 20.3469C21.9895 19.9609 22.0783 19.5428 22.0777 19.12V16.12C22.0723 15.429 21.8286 14.7611 21.3877 14.2291C20.9467 13.6971 20.3357 13.3336 19.6577 13.2ZM20.1477 19.2C20.1474 19.3396 20.1179 19.4775 20.061 19.6049C20.0042 19.7324 19.9213 19.8465 19.8177 19.94C19.7081 20.0399 19.5777 20.1141 19.4359 20.1573C19.2941 20.2006 19.1444 20.2117 18.9977 20.19C15.266 19.7026 11.798 18.002 9.12773 15.35C6.4552 12.6775 4.73976 9.19738 4.24773 5.45001C4.22601 5.30335 4.23717 5.15369 4.28041 5.01186C4.32364 4.87004 4.39788 4.73961 4.49773 4.63001C4.59235 4.52516 4.70811 4.44155 4.83738 4.38467C4.96665 4.32779 5.1065 4.29894 5.24773 4.30001H8.24773C8.47889 4.29436 8.70487 4.369 8.8872 4.51121C9.06952 4.65343 9.19693 4.85443 9.24773 5.08001C9.24773 5.35001 9.33773 5.63001 9.39773 5.90001C9.51331 6.42388 9.66705 6.93858 9.85773 7.44001L8.45773 8.10001C8.21709 8.21048 8.03009 8.41186 7.93773 8.66001C7.83771 8.90347 7.83771 9.17655 7.93773 9.42001C9.37693 12.5028 11.855 14.9808 14.9377 16.42C15.1812 16.52 15.4543 16.52 15.6977 16.42C15.9459 16.3277 16.1473 16.1406 16.2577 15.9L16.8877 14.5C17.4036 14.6881 17.9315 14.8418 18.4677 14.96C18.7277 15.02 19.0077 15.07 19.2777 15.11C19.5033 15.1608 19.7043 15.2882 19.8465 15.4705C19.9887 15.6529 20.0634 15.8788 20.0577 16.11L20.1477 19.2ZM14.2477 2.20001C14.0177 2.20001 13.7777 2.20001 13.5477 2.20001C13.2825 2.22256 13.0371 2.34953 12.8655 2.55301C12.6939 2.75649 12.6102 3.0198 12.6327 3.28501C12.6553 3.55023 12.7823 3.79563 12.9857 3.96722C13.1892 4.13882 13.4525 4.22256 13.7177 4.20001H14.2477C15.839 4.20001 17.3652 4.83215 18.4904 5.95737C19.6156 7.08259 20.2477 8.60871 20.2477 10.2C20.2477 10.38 20.2477 10.55 20.2477 10.73C20.2256 10.9938 20.3089 11.2557 20.4795 11.4581C20.6501 11.6606 20.894 11.7871 21.1577 11.81H21.2377C21.4881 11.811 21.7297 11.7181 21.9148 11.5496C22.1 11.3811 22.2152 11.1493 22.2377 10.9C22.2377 10.67 22.2377 10.43 22.2377 10.2C22.2377 8.08001 21.3962 6.04669 19.8981 4.54669C18.4 3.04669 16.3677 2.20266 14.2477 2.20001ZM16.2477 10.2C16.2477 10.4652 16.3531 10.7196 16.5406 10.9071C16.7282 11.0947 16.9825 11.2 17.2477 11.2C17.5129 11.2 17.7673 11.0947 17.9548 10.9071C18.1424 10.7196 18.2477 10.4652 18.2477 10.2C18.2477 9.13915 17.8263 8.12173 17.0762 7.37158C16.326 6.62144 15.3086 6.20001 14.2477 6.20001C13.9825 6.20001 13.7282 6.30537 13.5406 6.49291C13.3531 6.68044 13.2477 6.9348 13.2477 7.20001C13.2477 7.46523 13.3531 7.71958 13.5406 7.90712C13.7282 8.09466 13.9825 8.20001 14.2477 8.20001C14.7782 8.20001 15.2869 8.41073 15.6619 8.7858C16.037 9.16087 16.2477 9.66958 16.2477 10.2Z"
            fill="#828696"
          />
        </svg>
      ),
      text: "High Call Volume",
    },
    {
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
        >
          <path
            d="M11.9997 12.7668H8.67884C8.45865 12.7668 8.24748 12.6793 8.09179 12.5236C7.93609 12.3679 7.84862 12.1568 7.84862 11.9366C7.84862 11.7164 7.93609 11.5052 8.09179 11.3495C8.24748 11.1938 8.45865 11.1063 8.67884 11.1063H11.1695V7.78546C11.1695 7.56527 11.257 7.3541 11.4127 7.1984C11.5684 7.04271 11.7795 6.95524 11.9997 6.95524C12.2199 6.95524 12.4311 7.04271 12.5868 7.1984C12.7425 7.3541 12.83 7.56527 12.83 7.78546V11.9366C12.83 12.1568 12.7425 12.3679 12.5868 12.5236C12.4311 12.6793 12.2199 12.7668 11.9997 12.7668ZM21.9624 4.46457V6.95524C21.9624 7.6158 21.7 8.24931 21.2329 8.7164C20.7658 9.18349 20.1323 9.4459 19.4717 9.4459H16.9811C16.7609 9.4459 16.5497 9.35843 16.394 9.20274C16.2383 9.04704 16.1508 8.83587 16.1508 8.61568C16.1508 8.39549 16.2383 8.18432 16.394 8.02863C16.5497 7.87293 16.7609 7.78546 16.9811 7.78546H19.1704C18.5061 6.63903 17.5768 5.66842 16.4603 4.95489C15.3439 4.24136 14.0727 3.80568 12.7533 3.6843C11.4339 3.56293 10.1046 3.7594 8.87667 4.25727C7.64878 4.75514 6.55802 5.53992 5.69571 6.54591C4.8334 7.55191 4.22463 8.74984 3.92037 10.0394C3.6161 11.329 3.6252 12.6727 3.9469 13.9581C4.26859 15.2434 4.89353 16.433 5.76938 17.4272C6.64523 18.4214 7.74652 19.1914 8.98104 19.6726C9.18626 19.7527 9.35123 19.9111 9.43967 20.1129C9.5281 20.3147 9.53276 20.5433 9.45261 20.7485C9.37246 20.9538 9.21407 21.1187 9.01229 21.2072C8.81051 21.2956 8.58186 21.3003 8.37664 21.2201C6.91765 20.651 5.61338 19.746 4.56964 18.5784C3.5259 17.4109 2.7721 16.0138 2.3694 14.5004C1.9667 12.987 1.92645 11.4 2.25191 9.86812C2.57736 8.33626 3.25936 6.9027 4.24257 5.68375C5.22577 4.46481 6.48249 3.49482 7.91075 2.85248C9.33901 2.21015 10.8986 1.91356 12.4629 1.98679C14.0273 2.06002 15.5523 2.501 16.9143 3.27395C18.2763 4.0469 19.4369 5.13005 20.302 6.43552V4.46457C20.302 4.24438 20.3894 4.03321 20.5451 3.87751C20.7008 3.72182 20.912 3.63435 21.1322 3.63435C21.3524 3.63435 21.5635 3.72182 21.7192 3.87751C21.8749 4.03321 21.9624 4.24438 21.9624 4.46457Z"
            fill="#828696"
            stroke="#828696"
            strokeWidth="0.6"
          />
          <path
            d="M15.9848 11.9367C15.1921 11.9367 14.4319 12.2633 13.8714 12.8445C13.3109 13.4258 12.996 14.2142 12.996 15.0362V18.1357C12.996 18.9577 13.3109 19.7461 13.8714 20.3274C14.4319 20.9086 15.1921 21.2352 15.9848 21.2352C16.7774 21.2352 17.5377 20.9086 18.0982 20.3274C18.6587 19.7461 18.9736 18.9577 18.9736 18.1357V15.0362C18.9736 14.2142 18.6587 13.4258 18.0982 12.8445C17.5377 12.2633 16.7774 11.9367 15.9848 11.9367ZM16.981 18.1357C16.981 18.4097 16.8761 18.6725 16.6892 18.8663C16.5024 19.06 16.249 19.1689 15.9848 19.1689C15.7205 19.1689 15.4671 19.06 15.2803 18.8663C15.0935 18.6725 14.9885 18.4097 14.9885 18.1357V15.0362C14.9885 14.7622 15.0935 14.4994 15.2803 14.3056C15.4671 14.1119 15.7205 14.003 15.9848 14.003C16.249 14.003 16.5024 14.1119 16.6892 14.3056C16.8761 14.4994 16.981 14.7622 16.981 15.0362V18.1357Z"
            fill="#828696"
          />
        </svg>
      ),
      text: "Zero Waiting Time",
    },
    {
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill="none"
        >
          <path
            d="M16.9748 2.02887H14.982V1.03247C14.982 0.76821 14.877 0.514772 14.6901 0.327911C14.5033 0.141049 14.2498 0.0360718 13.9856 0.0360718C13.7213 0.0360718 13.4679 0.141049 13.281 0.327911C13.0941 0.514772 12.9892 0.76821 12.9892 1.03247V2.02887H7.01075V1.03247C7.01075 0.76821 6.90577 0.514772 6.71891 0.327911C6.53205 0.141049 6.27861 0.0360718 6.01435 0.0360718C5.75009 0.0360718 5.49665 0.141049 5.30979 0.327911C5.12293 0.514772 5.01795 0.76821 5.01795 1.03247V2.02887H3.02515C2.23236 2.02887 1.47205 2.3438 0.911466 2.90439C0.350883 3.46497 0.0359497 4.22529 0.0359497 5.01807V16.9749C0.0359497 17.7677 0.350883 18.528 0.911466 19.0886C1.47205 19.6491 2.23236 19.9641 3.02515 19.9641H16.9748C17.7675 19.9641 18.5279 19.6491 19.0884 19.0886C19.649 18.528 19.964 17.7677 19.964 16.9749V5.01807C19.964 4.22529 19.649 3.46497 19.0884 2.90439C18.5279 2.3438 17.7675 2.02887 16.9748 2.02887ZM17.9712 16.9749C17.9712 17.2391 17.8662 17.4926 17.6793 17.6794C17.4925 17.8663 17.239 17.9713 16.9748 17.9713H3.02515C2.76089 17.9713 2.50745 17.8663 2.32059 17.6794C2.13373 17.4926 2.02875 17.2391 2.02875 16.9749V10.0001H17.9712V16.9749ZM17.9712 8.00727H2.02875V5.01807C2.02875 4.75381 2.13373 4.50037 2.32059 4.31351C2.50745 4.12665 2.76089 4.02167 3.02515 4.02167H5.01795V5.01807C5.01795 5.28233 5.12293 5.53577 5.30979 5.72263C5.49665 5.90949 5.75009 6.01447 6.01435 6.01447C6.27861 6.01447 6.53205 5.90949 6.71891 5.72263C6.90577 5.53577 7.01075 5.28233 7.01075 5.01807V4.02167H12.9892V5.01807C12.9892 5.28233 13.0941 5.53577 13.281 5.72263C13.4679 5.90949 13.7213 6.01447 13.9856 6.01447C14.2498 6.01447 14.5033 5.90949 14.6901 5.72263C14.877 5.53577 14.982 5.28233 14.982 5.01807V4.02167H16.9748C17.239 4.02167 17.4925 4.12665 17.6793 4.31351C17.8662 4.50037 17.9712 4.75381 17.9712 5.01807V8.00727Z"
            fill="#828696"
          />
        </svg>
      ),
      text: "Scheduling",
    },
    {
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
        >
          <path
            d="M8.79834 1.33681C9.16455 0.970804 9.75834 0.970753 10.1245 1.33681C10.4906 1.70298 10.4905 2.29676 10.1245 2.66298L8.2085 4.579H11.8062C16.8557 4.57922 20.9486 8.67301 20.9487 13.7226C20.9486 18.7721 16.8557 22.8659 11.8062 22.8661C6.75648 22.8661 2.66276 18.7722 2.6626 13.7226C2.66272 13.2047 3.08224 12.7841 3.6001 12.7841C4.11795 12.7841 4.53748 13.2047 4.5376 13.7226C4.53776 17.7363 7.79233 20.9901 11.8062 20.9901C15.8198 20.9899 19.0736 17.7362 19.0737 13.7226C19.0736 9.70886 15.8198 6.45422 11.8062 6.454H8.2085L10.1245 8.37001L10.189 8.4413C10.4893 8.80954 10.4676 9.35284 10.1245 9.69619C9.78119 10.0395 9.23797 10.061 8.86963 9.76064L8.79834 9.69619L5.28174 6.17958C4.91562 5.81335 4.91555 5.2196 5.28174 4.85341L8.79834 1.33681ZM12.2642 10.5927C12.7728 10.3628 13.4157 10.3757 13.9419 10.7499L16.5659 12.6161C17.4087 13.2159 17.4089 14.4002 16.5659 14.9999L13.9419 16.8651C13.4157 17.2394 12.7728 17.2523 12.2642 17.0224C11.755 16.7922 11.358 16.3066 11.3579 15.6737V15.5194L9.46631 16.8651C8.94015 17.2394 8.29721 17.2522 7.78857 17.0224C7.27938 16.7922 6.88239 16.3067 6.88232 15.6737V11.9413C6.88246 11.3085 7.27946 10.8228 7.78857 10.5927C8.2972 10.3629 8.94019 10.3757 9.46631 10.7499L11.3579 12.0956V11.9413C11.358 11.3085 11.755 10.8228 12.2642 10.5927ZM11.6069 15.8651C11.6079 15.8714 11.6107 15.8774 11.6118 15.8837C11.6053 15.8466 11.5992 15.8089 11.5962 15.7704L11.6069 15.8651ZM8.63428 11.7987C8.55856 11.7451 8.46387 11.7417 8.38525 11.7772C8.30729 11.8125 8.26722 11.8742 8.26709 11.9413V15.6737C8.26715 15.741 8.30713 15.8034 8.38525 15.8388C8.46389 15.8742 8.55858 15.87 8.63428 15.8163L11.2583 13.9501C11.3638 13.8748 11.3639 13.7402 11.2583 13.6649L8.63428 11.7987ZM13.1108 11.7987C13.0351 11.7448 12.9396 11.7416 12.8608 11.7772C12.783 11.8125 12.7428 11.8742 12.7427 11.9413V15.6737C12.7427 15.7409 12.7828 15.8034 12.8608 15.8388C12.9396 15.8743 13.0351 15.8701 13.1108 15.8163L15.7339 13.9501C15.8396 13.8748 15.8396 13.7402 15.7339 13.6649L13.1108 11.7987Z"
            fill="#828696"
          />
        </svg>
      ),
      text: "Quick Response",
    },
    {
      icon: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
        >
          <path
            d="M13.2139 4.0293C13.5846 3.65906 14.1861 3.65873 14.5566 4.0293L15.8154 5.28809C16.1858 5.65865 16.1856 6.26017 15.8154 6.63086L14.5566 7.88965C14.2091 8.23717 13.659 8.25822 13.2861 7.9541L13.2139 7.88965C12.9487 7.6245 12.8741 7.24145 12.9883 6.90918H6.04102C4.98922 6.90931 4.13608 7.76174 4.13574 8.81348C4.13574 9.86554 4.98902 10.7186 6.04102 10.7188H17.6836C19.9328 10.719 21.7566 12.5428 21.7568 14.792C21.7568 17.0415 19.933 18.8649 17.6836 18.8652H7.09668C6.7217 19.7875 5.81726 20.4383 4.75977 20.4385C3.36678 20.4382 2.2373 19.3091 2.2373 17.916C2.2376 16.5232 3.36697 15.3938 4.75977 15.3936C5.81707 15.3937 6.72157 16.0448 7.09668 16.9668H17.6836C18.8844 16.9665 19.8584 15.9929 19.8584 14.792C19.8581 13.5913 18.8843 12.6175 17.6836 12.6172H6.04102C3.94044 12.6171 2.2373 10.9141 2.2373 8.81348C2.23765 6.71314 3.94065 5.0099 6.04102 5.00977H12.9883C12.8742 4.67752 12.9487 4.29443 13.2139 4.0293ZM17.6826 18.5459H17.6836L17.877 18.541C17.8877 18.5405 17.8984 18.5387 17.9092 18.5381C17.8342 18.5427 17.7587 18.5459 17.6826 18.5459ZM17.9521 18.5342C18.0121 18.5299 18.0717 18.5247 18.1309 18.5176C18.0717 18.5247 18.0121 18.5298 17.9521 18.5342ZM18.1787 18.5117C18.2414 18.5033 18.3035 18.4929 18.3652 18.4814C18.3035 18.4929 18.2414 18.5033 18.1787 18.5117ZM18.3975 18.4756C18.4697 18.4615 18.5415 18.4467 18.6123 18.4287C18.5416 18.4467 18.4698 18.4615 18.3975 18.4756ZM4.31543 15.7588C4.24775 15.7727 4.18148 15.7906 4.11621 15.8105C4.18304 15.7901 4.25102 15.772 4.32031 15.7578L4.31543 15.7588ZM4.87305 12.0977C4.89978 12.1072 4.92707 12.1152 4.9541 12.124C4.91676 12.1118 4.87954 12.0994 4.84277 12.0859L4.87305 12.0977ZM19.2344 3.43652C20.627 3.43681 21.7564 4.56635 21.7568 5.95898C21.7568 7.35198 20.6273 8.48213 19.2344 8.48242C17.8412 8.48242 16.7119 7.35216 16.7119 5.95898C16.7123 4.56617 17.8415 3.43652 19.2344 3.43652ZM17.042 5.73438C17.0371 5.78208 17.0367 5.83034 17.0352 5.87891C17.0369 5.83037 17.0371 5.78207 17.042 5.73438ZM15.7227 5.71484C15.7079 5.67991 15.6903 5.64562 15.6689 5.61328L15.666 5.60938C15.6885 5.64301 15.7073 5.67846 15.7227 5.71484Z"
            fill="#828696"
          />
        </svg>
      ),
      text: "Call Routing",
    },
  ];

  const howSectionCardList = [
    {
      title: "Say goodbye to overwhelmed front desks",
      heading: "Voxmo instantly manages high call volumes",
      headingWidth: "435px",
      desc: "Voxmo answers every patient call immediately, even during the busiest times, so your front desk never feels overloaded. It ensures no call is missed or ignored, freeing your staff from constant phone chaos.",
      img: "/images/healthcare/howSectionCardImg1.webp",
      imgWidth: "463px",
      mobileImg: "/images/healthcare/howSectionCardImg1.webp",
    },
    {
      title: "No more long holds or frustrated patients",
      heading: "Calls picked up without wait time",
      headingWidth: "400px",
      desc: "With Voxmo, patients no longer face endless hold music or dropped calls. Our AI answers promptly with a natural voice, making every interaction smooth and frustration-free.",
      descWidth: "445px",
      img: "/images/healthcare/howSectionCardImg2.webp",
      imgWidth: "460px",
      mobileImg: "/images/healthcare/howSectionCardImg2.webp",
    },
    {
      title: "Stop missing appointment bookings and urgent requests",
      heading: "Seamless Appointment Scheduling and Call Routing",
      desc: "Voxmo automatically books appointments and routes urgent calls to the right staff members, ensuring every patient request is addressed quickly and accurately.",
      img: "/images/healthcare/howSectionCardImg3.webp",
      imgWidth: "413px",
      mobileImg: "/images/healthcare/howSectionCardMobileImg3.webp",
    },
    {
      title: "Never leave patients unheard",
      heading: "Immediate Answers to Patient Questions",
      headingWidth: "390px",
      desc: "Voxmo listens and responds to patient inquiries in real-time, resolving common questions without delay. This creates a better patient experience and builds trust in your practice.",
      descWidth: "430px",
      img: "/images/healthcare/howSectionCardImg4.webp",
      imgWidth: "461px",
      mobileImg: "/images/healthcare/howSectionCardMobileImg4.webp",
    },
    {
      title: "Prevent staff burnout from constant call handling",
      heading: "AI Voice Agent Handles Routine Calls, Staff Focus on Care",
      desc: "By taking over repetitive phone tasks, Voxmo lets your team focus on providing in-person care, reducing stress, and improving overall productivity.",
      img: "/images/healthcare/howSectionCardImg5.webp",
      imgWidth: "477px",
      mobileImg: "/images/healthcare/howSectionCardMobileImg5.webp",
    }
  ]

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);
    handleScroll();

    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  useEffect(() => {
    if (isStarted) {
      autoTabChange();
    }
  }, [activeTab]);

  function handleScroll() {
    const howSectionTabListEle =
      howSectionTabListRef.current.getBoundingClientRect();
    if (window.innerHeight >= howSectionTabListEle.bottom) {
      setIsStarted(true);
      handleTabChange(0);
      window.removeEventListener("scroll", handleScroll);
    }
  }

  function handleTabChange(index) {
    setActiveTab(index);
    howSectionTabLine.current.style.left = `${howSectionTab.current[index].offsetLeft}px`;
    howSectionTabLine.current.style.width = `${howSectionTab.current[index].offsetWidth}px`;
  }

  function autoTabChange() {
    clearInterval(intervalRef.current); // clear previous
    intervalRef.current = setInterval(() => {
      if (activeTab === howSectionTabList.length - 1) {
        handleTabChange(0);
      } else {
        handleTabChange(activeTab + 1);
      }
    }, 8000);
  }

  return (
    <>
      <div
        ref={howSectionTabListRef}
        className={`${styles.howSectionTabList} d-flex`}
      >
        {howSectionTabList.map((tab, index) => {
          return (
            <div
              key={index}
              ref={(el) => (howSectionTab.current[index] = el)}
              onClick={() => handleTabChange(index)}
              className={`${styles.howSectionTab} ${
                activeTab === index ? styles.active : ""
              } d-flex align-items-center`}
            >
              {tab.icon}
              <p className={styles.howSectionTabText}>{tab.text}</p>
            </div>
          );
        })}
        <div ref={howSectionTabLine} className={styles.howSectionTabLine}></div>
      </div>
      <div className={styles.howSectionCardList}>
        {howSectionCardList.map((card, index)=>{
          return(
            <div key={index} className={`${styles.howSectionCard} ${activeTab === index ? "d-flex" : "d-none"}`}>
              <div className={styles.howSectionCardLeft}>
                <h6 className={styles.howSectionCardTitle}>{card.title}</h6>
                <h2 style={{maxWidth: card.headingWidth}} className={styles.howSectionCardHeading}>{card.heading}</h2>
                <p style={{maxWidth: card.descWidth}} className={styles.howSectionCardDesc}>{card.desc}</p>
              </div>
              <div className={`${styles.howSectionCardRight} d-flex justify-content-center`}>
                <img style={{maxWidth: card.imgWidth}} className={`${styles.howSectionCardImg} ${styles.howSectionCardDesktopImg}`} src={card.img} alt={card.title} />
                <img className={`${styles.howSectionCardImg} ${styles.howSectionCardMobileImg}`} src={card.mobileImg} alt={card.title} />
              </div>
            </div>
          )
        })}
      </div>
    </>
  );
}
